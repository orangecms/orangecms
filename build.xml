<?xml version="1.0" encoding="UTF-8"?>
<project name="orangecms" default="build">

 <property name="toolsdir" value="${basedir}/vendor/bin/"/>


 <target name="build"
         depends="prepare,lint,phploc-ci,pdepend,phpmd-ci,phpcs-ci,phpcpd-ci,phpunit,phpunit-integration,phpdox,grunt"
         description=""/>

 <target name="build-parallel"
         depends="prepare,lint,tools-parallel,phpunit,phpunit-integration,phpdox"
         description=""/>

 <target name="tools-parallel" description="Run tools in parallel">
  <parallel threadCount="2">
   <sequential>
    <antcall target="pdepend"/>
    <antcall target="phpmd-ci"/>
   </sequential>
   <antcall target="phpcpd-ci"/>
   <antcall target="phpcs-ci"/>
   <antcall target="phploc-ci"/>
  </parallel>
 </target>

 <target name="clean"
         unless="clean.done"
         description="Cleanup build artifacts">
  <delete dir="${basedir}/build/api"/>
  <delete dir="${basedir}/build/coverage"/>
  <delete dir="${basedir}/build/logs"/>
  <delete dir="${basedir}/build/pdepend"/>
  <delete dir="${basedir}/build/phpdox"/>
  <delete dir="${basedir}/node_modules"/>
  <delete dir="${basedir}/vendor"/>
  <property name="clean.done" value="true"/>
 </target>

 <target name="prepare"
         unless="prepare.done"
         depends="clean"
         description="Prepare for build">
  <copy file="config.php.dist" tofile="config.php"/>
  <!-- create directories -->
  <mkdir dir="${basedir}/build/api"/>
  <mkdir dir="${basedir}/build/coverage"/>
  <mkdir dir="${basedir}/build/logs"/>
  <mkdir dir="${basedir}/build/pdepend"/>
  <mkdir dir="${basedir}/build/phpdox"/>
  <!-- install build tools -->
  <exec executable="composer" dir="${basedir}" failonerror="true" logError="true">
   <arg value="install" />
  </exec>
  <exec executable="npm" dir="${basedir}" failonerror="true" logError="true">
   <arg value="install" />
  </exec>
  <property name="prepare.done" value="true"/>
 </target>

 <target name="lint"
         unless="lint.done"
         description="Perform syntax check of sourcecode files">
  <apply executable="php" failonerror="true" taskname="lint">
   <arg value="-l" />

   <fileset dir="${basedir}/ORN">
    <include name="**/*.php" />
    <modified />
   </fileset>

   <fileset dir="${basedir}/Tests">
    <include name="**/*.php" />
    <modified />
   </fileset>
  </apply>

  <property name="lint.done" value="true"/>
 </target>

 <target name="phploc"
         unless="phploc.done"
         description="Measure project size using PHPLOC and print human readable output. Run via CLI before committing.">
  <exec executable="${toolsdir}phploc" taskname="phploc">
   <arg value="--count-tests" />
   <arg path="${basedir}/ORN" />
   <arg path="${basedir}/Tests" />
  </exec>

  <property name="phploc.done" value="true"/>
 </target>

 <target name="phploc-ci"
         unless="phploc.done"
         depends="prepare"
         description="Measure project size using PHPLOC and log result in CSV and XML format. Intended for CI.">
  <exec executable="${toolsdir}phploc" taskname="phploc">
   <arg value="--count-tests" />
   <arg value="--log-csv" />
   <arg path="${basedir}/build/logs/phploc.csv" />
   <arg value="--log-xml" />
   <arg path="${basedir}/build/logs/phploc.xml" />
   <arg path="${basedir}/ORN" />
   <arg path="${basedir}/Tests" />
  </exec>

  <property name="phploc.done" value="true"/>
 </target>

 <target name="pdepend"
         unless="pdepend.done"
         depends="prepare"
         description="Calculate software metrics using PHP_Depend and log result in XML format. Intended for CI.">
  <exec executable="${toolsdir}pdepend" taskname="pdepend">
   <arg value="--jdepend-xml=${basedir}/build/logs/jdepend.xml" />
   <arg value="--jdepend-chart=${basedir}/build/pdepend/dependencies.svg" />
   <arg value="--overview-pyramid=${basedir}/build/pdepend/overview-pyramid.svg" />
   <arg path="${basedir}/ORN" />
  </exec>

  <property name="pdepend.done" value="true"/>
 </target>

 <target name="phpmd"
         unless="phpmd.done"
         description="Perform project mess detection using PHPMD and print human readable output. Run via CLI before committing.">
  <exec executable="${toolsdir}phpmd" taskname="phpmd">
   <arg path="${basedir}/ORN" />
   <arg value="text" />
   <arg path="${basedir}/build/phpmd.xml" />
  </exec>

  <property name="phpmd.done" value="true"/>
 </target>

 <target name="phpmd-ci"
         unless="phpmd.done"
         depends="prepare"
         description="Perform project mess detection using PHPMD and log result in XML format. Intended for CI.">
  <exec executable="${toolsdir}phpmd" taskname="phpmd">
   <arg path="${basedir}/ORN" />
   <arg value="xml" />
   <arg path="${basedir}/build/phpmd.xml" />
   <arg value="--reportfile" />
   <arg path="${basedir}/build/logs/pmd.xml" />
  </exec>

  <property name="phpmd.done" value="true"/>
 </target>

 <target name="phpcs"
         unless="phpcs.done"
         description="Find coding standard violations using PHP_CodeSniffer and print human readable output. Run via CLI before committing.">
  <exec executable="${toolsdir}phpcs" taskname="phpcs">
   <arg value="--standard=${basedir}/build/phpcs.xml" />
   <arg value="--extensions=php" />
   <arg value="--ignore=autoload.php" />
   <arg path="${basedir}/ORN" />
  </exec>

  <property name="phpcs.done" value="true"/>
 </target>

 <target name="phpcs-ci"
         unless="phpcs.done"
         depends="prepare"
         description="Find coding standard violations using PHP_CodeSniffer and log result in XML format. Intended for CI.">
  <exec executable="${toolsdir}phpcs" output="/dev/null" taskname="phpcs">
   <arg value="--report-xml=${basedir}/build/logs/phpcs.xml" />
   <arg value="--standard=${basedir}/build/phpcs.xml" />
   <arg value="--extensions=php" />
   <arg value="--ignore=autoload.php" />
   <arg path="${basedir}/ORN" />
  </exec>

  <property name="phpcs.done" value="true"/>
 </target>

 <target name="phpcpd"
         unless="phpcpd.done"
         description="Find duplicate code using PHPCPD and print human readable output. Run via CLI before committing.">
  <exec executable="${toolsdir}phpcpd" taskname="phpcpd">
   <arg path="${basedir}/ORN" />
  </exec>

  <property name="phpcpd.done" value="true"/>
 </target>

 <target name="phpcpd-ci"
         unless="phpcpd.done"
         depends="prepare"
         description="Find duplicate code using PHPCPD and log result in XML format. Intended for CI.">
  <exec executable="${toolsdir}phpcpd" taskname="phpcpd">
   <arg value="--log-pmd" />
   <arg path="${basedir}/build/logs/pmd-cpd.xml" />
   <arg path="${basedir}/ORN" />
  </exec>

  <property name="phpcpd.done" value="true"/>
 </target>

 <target name="phpunit"
         unless="phpunit.done"
         depends="prepare"
         description="Run unit tests with PHPUnit">
  <exec executable="${toolsdir}phpunit" failonerror="true" taskname="phpunit">
   <arg value="--configuration"/>
   <arg path="${basedir}/Tests/Unit/phpunit.xml"/>
  </exec>

  <property name="phpunit-integration.done" value="true"/>
 </target>

 <target name="phpunit-integration"
         unless="phpunit-integration.done"
         depends="prepare"
         description="Run integration tests with PHPUnit">
  <exec executable="${toolsdir}phpunit" failonerror="true" taskname="phpunit-integration">
   <arg value="--configuration"/>
   <arg path="${basedir}/Tests/Integration/phpunit.xml"/>
  </exec>

  <property name="phpunit.done" value="true"/>
 </target>

 <target name="phpdox"
         unless="phpdox.done"
         depends="phploc-ci,phpcs-ci,phpmd-ci"
         description="Generate project documentation using phpDox">
  <exec executable="${toolsdir}phpdox" dir="${basedir}/build" taskname="phpdox"/>

  <property name="phpdox.done" value="true"/>
 </target>

  <target name="grunt">
    <exec executable="grunt" dir="${basedir}" outputproperty="log">
<!--      <arg value="build"/> -->
    </exec>
 
    <echo message="${log}"/>
    <condition property="onSuccess">
      <matches pattern="Done, without errors." string="${log}"/>
    </condition>
    <fail message="Grunt failed!" unless="onSuccess"/>
  </target>
</project>

